version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 20000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 20000000
      KAFKA_MAX_REQUEST_SIZE: 20000000

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  producer:
    build:
      context: .
      dockerfile: docker/producer.Dockerfile
    volumes:
      - ./sample_data:/app/sample_data
    depends_on:
      - kafka
    deploy:
      resources:
        limits:
          memory: 1G

  consumer:
    build:
      context: .
      dockerfile: docker/consumer.Dockerfile
    depends_on:
      - kafka
      - redis

  dashboard:
    build:
      context: .
      dockerfile: docker/dashboard.Dockerfile
    volumes:
      - ./streamlit_dashboard:/app
      - ./ml:/app/ml
    depends_on:
      - redis
    ports:
      - "8533:8501"

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - .env
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  postgres:
    image: postgres:13
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_db:/var/lib/postgresql/data

  airflow-webserver:
    build:
      context: .
      dockerfile: docker/airflow.Dockerfile
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__RBAC: "True"
      _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_ADMIN_USER}
      _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_ADMIN_PWD}
    depends_on:
      - postgres
      - kafka
      - minio
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - /var/run/docker.sock:/var/run/docker.sock:rw
    command: webserver
    restart: always

  airflow-scheduler:
    build:
      context: .
      dockerfile: docker/airflow.Dockerfile
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - /var/run/docker.sock:/var/run/docker.sock:rw
    depends_on:
      - airflow-webserver
      - postgres
    command: scheduler
    restart: always

  mlflow:
    build:
      context: .
      dockerfile: docker/mlflow.Dockerfile
    depends_on:
      - postgres
      - minio
    ports:
      - "5100:5000"
    env_file:
      - .env
    environment:
      MLFLOW_BACKEND_STORE_URI: postgresql://airflow:airflow@postgres:5432/mlflow
      MLFLOW_ARTIFACT_ROOT: s3://mlflow/
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    command:
      - mlflow
      - server
      - --backend-store-uri=postgresql://airflow:airflow@postgres:5432/mlflow
      - --default-artifact-root=s3://mlflow/
      - --host
      - 0.0.0.0
      - --port
      - "5000"

  ml-train:
    build:
      context: .
      dockerfile: docker/model.Dockerfile
    depends_on:
      - mlflow
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:5000
    volumes:
      - ./ml_saved_models:/app/models

volumes:
  minio_data:
  postgres_db:
