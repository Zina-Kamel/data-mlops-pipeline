services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  producer:
    build:
      context: .
      dockerfile: docker/producer.Dockerfile
    volumes:
      - ./sample_data:/app/sample_data
    depends_on:
      - kafka

  consumer:
    build:
      context: .
      dockerfile: docker/consumer.Dockerfile
    depends_on:
      - kafka
      - redis
    deploy:
      resources:
        limits:
          memory: 512M

  dashboard:
    build:
      context: .
      dockerfile: docker/dashboard.Dockerfile
    depends_on:
      - redis
    ports:
      - "8501:8501"

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  etl:
    build:
      context: .
      dockerfile: docker/etl.Dockerfile
    depends_on:
      - kafka
      - minio
    environment:
      - MINIO_ENDPOINT=http://minio:9000
    deploy:
      resources:
        limits:
          memory: 2G

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_db:/var/lib/postgresql/data

  airflow:
    image: apache/airflow:2.7.3
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    command: standalone
    depends_on:
        - postgres
        - kafka
        - minio

volumes:
  minio_data:
  postgres_db:
